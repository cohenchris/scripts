#!/bin/bash

# mytex_compile(filename_to_compile)
#   filename_to_compile - name/prefix of file to compile with LaTeX
#
# Compiles a LaTeX file into PDF with Biber, XeLaTeX, and PDFLaTeX
function mytex_compile()
{
  filename_to_compile="$1"

  if [[ ${filename_to_compile} == *".tex" ]]
  then
    tex_filename=${filename_to_compile}
  elif [[ ${filename_to_compile} == *"." ]]
  then
    tex_filename=${filename_to_compile}"tex"
  else
    tex_filename=${filename_to_compile}".tex"
  fi

  biber_filename=${tex_filename%.*}

  xelatex=$(grep fontspec $tex_filename | wc -l)

  if [[ $xelatex -ne 0 ]]; then
    xelatex $tex_filename
    biber $biber_filename
    xelatex $tex_filename
  else
    pdflatex $tex_filename
    biber $biber_filename
    pdflatex $tex_filename
  fi

  # Removes all extraneous files from compilation
  rm *.out *.aux *.blg *.bbl *.log *.bcf *.run.xml > /dev/null 2>&1
}


# mytex_create(filename_out)
#   filename_out - name/prefix of file to compile with LaTeX
#
# Spits out a file which contains a very simple LaTeX document template
function mytex_create()
{
  filename_out="$1"

  echo "\documentclass[12pt]{article}

  \usepackage[backend=biber]{biblatex}
  \addbibresource{BIBRESOURCE PATH GOES HERE}

  \usepackage[margin=1in]{geometry}
  \usepackage{times}
  \usepackage{titling}

  \usepackage{setspace}
  \doublespacing

  \author{AUTHOR NAME GOES HERE}
  \title{TITLE GOES HERE}
  \date{\today}


  \renewcommand\maketitle{
    \begin{flushleft}
    \textbf{\theauthor}\\\\
    \textbf{\thedate}\\\\
    \textbf{ASSIGNMENT NAME GOES HERE}\\\\
    \end{flushleft}

    \begin{center}
    \Large{\textbf{\thetitle}}
    \end{center}
  }

  \begin{document}
  \maketitle

  \newpage
  \printbibliography
  \end{document}" >> ${filename_out}
}


# mytex_edit(filename_to_edit)
#   filename_to_edit - name of LaTeX file to edit
#
# Compiles LaTeX file into a PDF, opens the PDF, and opens the LaTeX file in vim
function mytex_edit()
{
  filename_to_edit="$1"

  #files=$(ls *.tex | wc -l)
  #if [ $files -ne 1 ]; then
  #  echo "ERROR: There needs to be only 1 valid LaTeX file to edit..."
  #  exit
  #fi

  if [ $# -ne 1 ]; then
    echo "ERROR: There needs to be 1 argument (the filename to edit)"
    exit
  fi

  pdf=$(ls | grep *.pdf | wc -l)
  if [ $pdf -ne 1 ]; then
    mytex_compile ${filename_to_edit} >> /dev/null
    exit
  fi

  zathura *.pdf &
  nvim $FILENAME
}

mytex_command="$1"
mytex_filename="$2"

if [ "${mytex_command}" == "compile" ]; then
  mytex_compile ${mytex_filename}
elif [ "${mytex_command}" == "create" ]; then
  mytex_create ${mytex_filename}
elif [ "${mytex_command}" == "edit" ]; then
  mytex_edit ${mytex_filename}
else
  echo "Invalid argument - choose one of [compile, create, edit]"
fi
